#!/bin/sh
# Render /etc/keepalived/keepalived.conf from UCI ha_vrrp
set -eu

CFG="/etc/keepalived/keepalived.conf"

EN="$(uci -q get ha_vrrp.core.enabled || echo 1)"
[ "$EN" = "1" ] || { echo "[ha-vrrp] disabled"; exit 0; }

CL="$(uci -q get ha_vrrp.core.cluster_name || echo lab-ha)"
PASS="$(uci -q get ha_vrrp.core.auth_pass || echo changeme-please)"
PREEMPT="$(uci -q get ha_vrrp.core.preempt || echo 1)"
ADV="$(uci -q get ha_vrrp.core.advert_int || echo 1)"
VRID="$(uci -q get ha_vrrp.core.vrid || echo 42)"
PRIO="$(uci -q get ha_vrrp.core.priority || echo 100)"
STATE="$(uci -q get ha_vrrp.core.state || echo BACKUP)"

IFACE="$(uci -q get ha_vrrp.core.iface || echo wan)"
VLAN_ID="$(uci -q get ha_vrrp.core.vlan_id || echo)"
USE_VLAN="$(uci -q get ha_vrrp.core.use_vlan || echo 0)"

VIP_CIDR="$(uci -q get ha_vrrp.core.vip_cidr || echo 192.0.2.200/24)"
VIP_IP="${VIP_CIDR%/*}"

SRC_IP="$(uci -q get ha_vrrp.core.unicast_src_ip || echo)"
[ -n "$SRC_IP" ] || { echo "[ha-vrrp] ERROR: unicast_src_ip is required"; exit 1; }

# Collect peers
PEERS="$(uci -q show ha_vrrp | awk -F= '/^ha_vrrp.core.unicast_peer=/ {gsub(/'\''/,"",$2); print $2}')"

DEV="$IFACE"
[ "$USE_VLAN" = "1" ] && [ -n "$VLAN_ID" ] && DEV="${IFACE}.${VLAN_ID}"

{
cat <<EOF
# AUTOGENERATED by ha-vrrp-apply â€“ DO NOT EDIT
global_defs {
  router_id ${CL}
  enable_script_security
  script_user root
}

vrrp_instance VI_${VRID} {
  state ${STATE}
  interface ${DEV}
  virtual_router_id ${VRID}
  priority ${PRIO}
  advert_int ${ADV}
  garp_master_delay 1
  garp_master_repeat 3
EOF
if [ "$PREEMPT" = "0" ]; then
  echo "  nopreempt"
fi

cat <<EOF
  authentication {
    auth_type PASS
    auth_pass ${PASS}
  }

  unicast_src_ip ${SRC_IP}
  unicast_peer {
EOF

for P in $PEERS; do
  echo "    ${P}"
done

cat <<EOF
  }

  virtual_ipaddress {
    ${VIP_CIDR}
  }

  notify_master "$(uci -q get ha_vrrp.core.notify_master || echo /usr/libexec/ha-vrrp/notify_master.sh)"
  notify_backup "$(uci -q get ha_vrrp.core.notify_backup || echo /usr/libexec/ha-vrrp/notify_backup.sh)"
}
EOF
} > "$CFG"

echo "[ha-vrrp] wrote $CFG for DEV=$DEV VRID=$VRID PRIO=$PRIO STATE=$STATE VIP=$VIP_CIDR"
