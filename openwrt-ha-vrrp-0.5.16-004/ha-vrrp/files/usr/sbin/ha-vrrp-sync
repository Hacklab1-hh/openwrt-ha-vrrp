#!/bin/sh
set -eu
PHOST="$(uci -q get ha_vrrp.core.peer_host || echo)"
PUSER="$(uci -q get ha_vrrp.core.peer_user || echo root)"
PPORT="$(uci -q get ha_vrrp.core.peer_port || echo 22)"
[ -n "$PHOST" ] || { echo "[sync] No peer_host set"; exit 1; }
CMD="${1:-}"
ssh_nostrict="ssh -o StrictHostKeyChecking=no -p $PPORT $PUSER@$PHOST"
keysync() {
  mkdir -p /root/.ssh
  [ -f /root/.ssh/id_rsa ] || ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa >/dev/null 2>&1
  PUB="$(cat /root/.ssh/id_rsa.pub)"
  $ssh_nostrict "mkdir -p /root/.ssh; grep -qF \"$PUB\" /root/.ssh/authorized_keys 2>/dev/null || echo \"$PUB\" >> /root/.ssh/authorized_keys; chmod 700 /root/.ssh; chmod 600 /root/.ssh/authorized_keys"
  echo "[sync] keysync OK"
}
push() {
  paths="$(uci -q show ha_vrrp | awk -F= '/^ha_vrrp.core.sync_path=/ {gsub(/'\''/,"",$2); print $2}')"
  for p in $paths; do
    [ -f "$p" ] || continue
    echo "[sync] push $p -> $PHOST"
    scp -P "$PPORT" -o StrictHostKeyChecking=no "$p" "$PUSER@$PHOST:$p" >/dev/null
  done
  $ssh_nostrict "/etc/init.d/network reload >/dev/null 2>&1 || true; /etc/init.d/firewall restart >/dev/null 2>&1 || true; /etc/init.d/ha-vrrp restart >/dev/null 2>&1 || true"
  echo "[sync] push done"
}
case "$CMD" in
  keysync) keysync ;;
  push)    push ;;
  *) echo "Usage: ha-vrrp-sync [keysync|push]"; exit 1;;
esac
