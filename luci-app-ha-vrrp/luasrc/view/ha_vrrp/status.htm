<%+header%>
<h2>HA VRRP â€“ Cluster Status</h2>
<div id="status" class="cbi-section">Loading...</div>

<div class="cbi-page-actions" style="margin-top:1rem">
  <button class="cbi-button cbi-button-apply" onclick="applyHA()">Apply & Restart Keepalived</button>
  <button class="cbi-button cbi-button-action" onclick="discover()">Discover Peers</button>
  <button class="cbi-button cbi-button-apply" onclick="keysync()">SSH Key Sync</button>
  <button class="cbi-button cbi-button-apply" onclick="syncpush()">Sync Now</button>
</div>

<script>
function renderStatus(data){
  const el = document.getElementById('status');
  el.textContent = '';
  const table = document.createElement('table'); table.className = 'table cbi-section-table';
  const rows = [
    ['Time', data.now],
    ['Host', data.host],
    ['Cluster', data.cluster],
    ['Role', data.role],
    ['Keepalived', data.ka],
    ['VRRP addrs', data.vrrp],
    ['Peer', data.peer],
    ['Peer reachable', data.peer_ping ? 'yes' : 'no']
  ];
  rows.forEach(r => {
    const tr = document.createElement('tr');
    const th = document.createElement('th'); th.textContent = r[0];
    const td = document.createElement('td'); td.textContent = (r[1]===undefined?'':r[1]);
    tr.appendChild(th); tr.appendChild(td); table.appendChild(tr);
  });
  el.appendChild(table);
}
async function poll(){
  try{
    const res = await fetch(L.env.cgi_base + '/admin/services/ha_vrrp/api/statusjson');
    const data = await res.json(); renderStatus(data);
  }catch(e){}
  setTimeout(poll, 3000);
}
async function applyHA(){ await fetch(L.env.cgi_base + '/admin/services/ha_vrrp/api/apply'); }
async function discover(){
  const res = await fetch(L.env.cgi_base + '/admin/services/ha_vrrp/api/peers'); const j = await res.json();
  alert('Peers: ' + (j.peers||[]).join(', '));
}
async function keysync(){ await fetch(L.env.cgi_base + '/admin/services/ha_vrrp/api/keysync'); }
async function syncpush(){ await fetch(L.env.cgi_base + '/admin/services/ha_vrrp/api/syncpush'); }
poll();
</script>
<%+footer%>
